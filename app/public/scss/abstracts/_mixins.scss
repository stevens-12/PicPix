// Mixins for efficient and consistent styling

// @mixin typeface($size, $weight, $color)
// Applies basic typographic styles.
@mixin typeface($size, $weight, $color) {
    font-size: $size;
    font-weight: $weight;
    color: $color;
}

// @mixin flexbox($direction, $content, $align)
// Sets up a flexbox container with common properties.
@mixin flexbox($direction, $content, $align) {
    display: flex;
    flex-direction: $direction;
    justify-content: $content;
    align-items: $align;
}

// @mixin size($width, $height)
// Sets element width and height.
@mixin size($width, $height) {
    width: $width;
    height: $height;
}

// @mixin position($position, $top, $right: null, $bottom: null, $left)
// Sets element positioning properties.
@mixin position($position, $top, $right: null, $bottom: null, $left, ) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

// @mixin background-gradient
// Applies a linear gradient background to an element.
@mixin background-gradient {
    background-color: #112d4e;
    background-image: linear-gradient(180deg, #112d4e 0%, #1d4e89 100%);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 0 0;
}

// @mixin transition($property: all, $duration: 0.5s, $state: ease)
// Applies a smooth transition effect.
@mixin transition($property: all, $duration: 0.5s, $state: ease) {
    transition: $property $duration $state;
}

// @mixin to($width)
// Applies styles within a max-width media query.
@mixin to($width) {
    @media (max-width: $width) {
        @content;
    }
}

// @mixin from($width)
// Applies styles within a min-width media query.
@mixin from($width) {
    @media (min-width: $width) {
        @content;
    }
}